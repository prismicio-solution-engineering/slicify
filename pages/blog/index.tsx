import Head from "next/head";
import type { GetStaticPropsContext, InferGetStaticPropsType } from "next";
import { createClient } from "../../prismicio";
import { Content } from "@prismicio/client";
import { SliceZone } from "@prismicio/react";
import { components } from "@/slices/marketing";
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";

type BlogIndexProps = InferGetStaticPropsType<typeof getStaticProps>;

export default function BlogIndex({ page, header, footer }: BlogIndexProps) {
  return (
    <>
      <Head>
        <title>Slicify - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header {...header.data} />
        <SliceZone slices={page.data.slices} components={components} />
        <Footer {...footer.data} />
      </main>
    </>
  );
}

export async function getStaticProps({ previewData }: GetStaticPropsContext) {
  const client = createClient({ previewData });
  //    ^ Automatically contains references to document types

  const page = await client.getSingle<Content.BlogIndexDocument>("blog_index");
  //    ^ Typed as BlogIndexDocument

  const header = await client.getSingle<Content.HeaderDocument>("header");
  //    ^ Typed as HeaderDocument

  const footer = await client.getSingle<Content.FooterDocument>("footer");
  //    ^ Typed as FooterDocument

  return {
    props: {
      page,
      header,
      footer
    },
  };
}
